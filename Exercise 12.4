# Exercise 12.4
def make_list(filename):
    # make a list from the text file
    t = []
    fin = open(filename)
    for line in fin:
        word = line.strip()
        t.append(word)
    return t


def find_anagrams(t):
    d = {}
    for s in t:
        sss = ''
        ss = sorted(s)
        d.setdefault(sss.join(ss), []).append(s)
# above 3 lines can be reduced to one line: d.setdefault(''.join(sorted(s), []).append(s)
# tuple way: d.setdefault(tuple(sorted(s)), []).append(s)
    tt = []

    for key, val in d.items():
        if len(val) > 2:
        # above line has a bug, it should be >= 2
            tt.append(val)
    return tt


word_list = make_list("words.txt")
anagrams_list = find_anagrams(word_list)
print(*anagrams_list, sep="\n")

# speed is already very fast! Good job!

# for 12.4.2
# Modify the previous program so that it prints the largest set of anagrams first, 
# followed by the second largest set, and so on.
 anagrams_list_sorted = sorted(anagrams_list, key=len, reverse=True)
 
